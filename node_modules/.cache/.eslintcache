[{"C:\\Users\\dodda\\OneDrive\\Desktop\\Food-Recipe-Generator-main\\src\\index.js":"1","C:\\Users\\dodda\\OneDrive\\Desktop\\Food-Recipe-Generator-main\\src\\App.js":"2","C:\\Users\\dodda\\OneDrive\\Desktop\\Food-Recipe-Generator-main\\src\\modal.js":"3","C:\\Users\\dodda\\OneDrive\\Desktop\\Food-Recipe-Generator-main\\src\\table.js":"4"},{"size":317,"mtime":1714911228063,"results":"5","hashOfConfig":"6"},{"size":7928,"mtime":1714911705573,"results":"7","hashOfConfig":"6"},{"size":1078,"mtime":1714911228143,"results":"8","hashOfConfig":"6"},{"size":642,"mtime":1714911228330,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vp70f8",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\dodda\\OneDrive\\Desktop\\Food-Recipe-Generator-main\\src\\index.js",[],[],"C:\\Users\\dodda\\OneDrive\\Desktop\\Food-Recipe-Generator-main\\src\\App.js",["23","24","25"],[],"import React,{ useEffect, useState} from 'react';\nimport icon from './images/food.svg';\nimport search from './images/search.svg';\nimport filtermain from './images/filter.png';\nimport save from './images/star.png';\nimport close from './images/cross.png';\nimport home from './images/home.png'\nimport favourite from './images/favourite.png'\nimport github from './images/github.png'\nimport linkedin from './images/linkedin.png'\n\n\nimport { Getmodal } from './modal';\n\n\n// https://api.edamam.com/search?q=groundnuts&app_id=f7eb1d4e&app_key=a26358e2b8c03452e3cdec5458c95cf4 \n\nvar dish_global = ''\nconst Render = () =>{\n\n  var filter = {};\n  const [data,setData] = useState([]);\n  const [value,setValue] = useState('Chicken');\n  const [fill,setFilter] = useState([]);\n  const [extra,setExtra] = useState([]);\n\n\n  const getdata = async(dish_call = 'Chicken') =>{\n    const key = 'a26358e2b8c03452e3cdec5458c95cf4';\n    const id = 'f7eb1d4e';\n    const response = await  fetch(`https://api.edamam.com/search?q=${dish_call}&app_id=${id}&app_key=${key}`)\n    const result = await response.json()\n    console.log('Hello',result.hits)\n    filter['All']= result.hits \n    result['hits'].forEach((ele) => {\n      if(filter[ele.recipe.dishType[0]]){\n        filter[ele.recipe.dishType[0]].push(ele)\n      }\n      else{\n        filter[ele.recipe.dishType[0]] = []\n        filter[ele.recipe.dishType[0]].push(ele);\n      }\n      setFilter(Object.keys(filter))\n    })\n    dish_global = dish_call\n    document.getElementById('page-name').innerText = dish_call.charAt(0).toUpperCase() + dish_call.slice(1) + ' Items'\n    if (result.hits.length > 9){\n      result.hits.splice(9,1)\n    }\n    setData(result.hits)\n    setExtra(result.hits)\n  }\n\n\n  const handleClick = (event) => {\n    console.log(event.currentTarget.id)\n    if (localStorage.getItem('saved_data') == null){\n      let saved_list = []\n      saved_list.unshift(data[event.currentTarget.id])\n      localStorage.setItem('saved_data',JSON.stringify(saved_list))\n      alert('Saved Item');\n      \n \n    }\n    else{\n      let saved_data = JSON.parse(localStorage.getItem('saved_data'))\n      saved_data.unshift(data[event.currentTarget.id])\n      console.log(saved_data)\n      localStorage.setItem('saved_data',JSON.stringify(saved_data))\n      alert('Saved Item')\n    }\n  };\n\n  const deletesave = (event) => {\n    console.log(event.currentTarget.id)\n    let saved_data = JSON.parse(localStorage.getItem('saved_data'))\n    saved_data.splice(event.currentTarget.id, 1);\n    setData(saved_data)\n    localStorage.setItem('saved_data',JSON.stringify(saved_data))\n    alert('Item Deleted')\n  }\n\n  const saved_items = () => {\n    document.getElementById('page-name').innerText = 'Saved Items'\n    let saved_data = JSON.parse(localStorage.getItem('saved_data'))\n    console.log(saved_data)\n    document.getElementsByClassName('save').src = icon\n    setData(saved_data)\n    let elements = document.getElementsByClassName(\"replace\");\n    for(var i = 0; i < elements.length; i++) {\n        elements[i].innerHTML = ''\n        let button = document.createElement('button')\n        let image_append = document.createElement('img')\n        let span = document.createElement('span')\n        span.innerText = 'Delete'\n        span.className = 'tool'\n        image_append.src = close\n        image_append.className = 'save'\n        button.className = 'save-option'\n        button.id = String(i)\n        button.onclick = deletesave;\n        button.appendChild(image_append)\n        button.appendChild(span)\n        elements[i].appendChild(button)\n    }\n  };\n\n\n  const make_filter = () =>{\n    filter['All'] = extra\n    extra.forEach((ele) => {\n      if(filter[ele.recipe.dishType[0]]){\n        filter[ele.recipe.dishType[0]].push(ele)\n      }\n      else{\n        filter[ele.recipe.dishType[0]] = []\n        filter[ele.recipe.dishType[0]].push(ele);\n      }\n      console.log(filter)\n    })\n  }\n\n  const homeupdate = () =>{\n    document.getElementById('page-name').innerText = dish_global.charAt(0).toUpperCase() + dish_global.slice(1) + ' Items'\n    setData(extra)\n    let elements = document.getElementsByClassName(\"replace\");\n\n    for(var i = 0; i < elements.length; i++) {\n        elements[i].innerHTML = ''\n        let button = document.createElement('button')\n        let image_append = document.createElement('img')\n        let span = document.createElement('span')\n        image_append.src = favourite\n        span.innerText = 'Save'\n        span.className = 'tool'\n        image_append.className = 'save'\n        button.className = 'save-option'\n        button.onclick = handleClick;\n        button.appendChild(image_append)\n        button.appendChild(span)\n        elements[i].appendChild(button)\n    }\n  }\n\n  const loop = (event) =>{\n    let dropvalue = event.target.value\n    make_filter()\n    console.log(dropvalue)\n\n    setData(filter[dropvalue]) \n  }\n    \n\n  const handleOnChange = (event) => {\n    console.log(\"hello\", event.target.value);\n    setValue(event.target.value);\n  };\n\n\n  useEffect(() => {\n        const timeoutId = setTimeout(() => getdata(value), 500);\n        return () => clearTimeout(timeoutId);\n      }, [value]);\n\n\n  return(\n    <>\n    <div className='head-main'>\n      <div className='head-main-one'>\n        <img src={icon} alt=\"Food\" className='head-icon-name'/> \n        <h2 id=\"head-name\">Food Recipie Generator</h2>\n      </div>\n      <div className='head-right-icons'>\n      <button className='head-save-button' onClick={homeupdate}>\n          <img src={home} alt='save-option-head' className='head-save'/>\n          <span className='tool'>Home</span>\n      </button>\n        <button className='head-save-button' onClick={saved_items}>\n            <img src={save} alt='save-option-head' className='head-save'/>\n            <span className='tool'>Saved</span>\n        </button>\n\n      </div>\n    </div>\n    <div className='head-two'>\n      <div className='head-left'>\n        <img src={search} alt='searh-icon' className='head-img'/>\n        <input type=\"text\" className=\"head-search\" placeholder=\"Search Recipie\" id='search-box' onChange={handleOnChange}/>\n      </div>\n      <div className='filter'>\n        \n        <img src={filtermain} alt='filter-icon' className='filter-icon'/>\n        <select id='select-filter' onChange={loop} >\n        {\n          fill.map((one) =>{\n            return(\n            <option value={one}>{one}</option>\n            )\n          })\n        }\n        </select>\n      </div>\n      </div>\n    <div id='page-name'></div>\n    <div className='main'>\n    {\n      data.map((element,index) => {\n        return(\n          <>\n            {/* <Cardcomponent index = {index} element = {element}/> */}\n            <div className='hover'>\n            <div className='comp-body' key={index}>\n              <img src={element.recipe.image} alt='food' className='comp-img'/> \n              <div className='comp-down'>\n                <p className='comp-name'>{element.recipe.label}</p>\n                <Getmodal label={element.recipe.label} ingrediants = {element.recipe.ingredients} link= {element.recipe.url} totalWeight={element.recipe.totalWeight}/>\n                <div className='comp-footer'>\n                  <div className='cusine'>Cusine Type : <span className='cusine-name'>{element.recipe.cuisineType[0].charAt(0).toUpperCase() + element.recipe.cuisineType[0].slice(1)}</span></div>\n                  <div className='replace'>\n                    <button className='save-option' id={index} onClick={handleClick}>\n                      <img src= {favourite} alt='Save' className='save'/> \n                      <span className='tool'>Save</span>\n                    </button>    \n                  </div>\n                </div>\n              </div>\n            </div>  \n          </div>\n          </>\n        )\n      })\n    }\n    </div>\n    \n    </>\n  )\n\n}\n\nfunction App() {\n\n  return (\n    <>\n      <Render />\n    </>\n  );\n};\nexport  {App};","C:\\Users\\dodda\\OneDrive\\Desktop\\Food-Recipe-Generator-main\\src\\modal.js",[],[],"C:\\Users\\dodda\\OneDrive\\Desktop\\Food-Recipe-Generator-main\\src\\table.js",[],[],{"ruleId":"26","severity":1,"message":"27","line":9,"column":8,"nodeType":"28","messageId":"29","endLine":9,"endColumn":14},{"ruleId":"26","severity":1,"message":"30","line":10,"column":8,"nodeType":"28","messageId":"29","endLine":10,"endColumn":16},{"ruleId":"31","severity":1,"message":"32","line":163,"column":10,"nodeType":"33","endLine":163,"endColumn":17,"suggestions":"34"},"no-unused-vars","'github' is defined but never used.","Identifier","unusedVar","'linkedin' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getdata'. Either include it or remove the dependency array.","ArrayExpression",["35"],{"desc":"36","fix":"37"},"Update the dependencies array to be: [getdata, value]",{"range":"38","text":"39"},[5152,5159],"[getdata, value]"]